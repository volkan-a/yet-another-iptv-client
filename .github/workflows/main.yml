name: Build and Release

on:
  push:
    branches:
      - release # trigger when release branch is pushed

jobs:
  build_and_release:
    name: Build and Release
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest] # run on all three platforms
        include:
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu # target for linux x86_64 binary
          - platform: ubuntu-latest
            target: aarch64-unknown-linux-gnu # target for linux arch64 binary
          - platform: windows-latest
            target: x86_64-pc-windows-msvc # target for windows x86_64 binary
          - platform: macos-latest
            target: universal # target for macos universal binary
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install Node.js 14.x
        uses: actions/setup-node@v2.4.0
        with:
          node-version: '14.x'
      
      - name: Install Rust stable toolchain with cargo-generate and wasm-pack components 
        uses: actions-rs/toolchain@v1.0.7 
        with:
          toolchain: stable 
          components: cargo-generate,wasm-pack 
      
      - name : Install dependencies 
        run : npm ci
      
      - name : Build Web App 
        run : npm run build
      
      - name : Use Tauri Action 
        uses : tauri-apps/tauri-action@v0.1.3 # use latest version of Tauri Action 
        with :
          args : build --target ${{ matrix.target }} --release # pass arguments to tauri-cli
      
      - name : Upload artifacts 
        uses : actions/upload-artifact@v2.3.1 # use upload-artifact action 
        with :
          name : ${{ matrix.target }}-artifact # set artifact name based on target 
          path : src-tauri/target/${{ matrix.target }}/release/bundle/* # set artifact path based on target 

  create_release:
    needs : build_and_release # wait for previous job to finish 
    runs-on : ubuntu-latest

    steps :
      - name : Download artifacts 
        uses : actions/download-artifact@v2.1.0 # use download-artifact action 
        
      - name : Create Release 
        id : create_release  
        uses : actions/create-release@v1.1.4 # use create-release action  
        env :
          GITHUB_TOKEN   ${{ secrets.GITHUB_TOKEN }}  
        
      with :
         tag_name   ${{ github.ref }}  
         release_name   Release ${{ github.ref }}  
         draft   false  
         prerelease   false  

     - name Upload Release Asset  
       id upload-release-asset  
       uses actions/upload-release-asset@v1.0.2  
       env :
         GITHUB_TOKEN   ${{ secrets.GITHUB_TOKEN }}  

     with :
       upload_url   ${{ steps.create_release.outputs.upload_url }}   
       asset_path   ./${{ matrix.target }}-artifact/*   
       asset_name   ${{ matrix.target }}-artifact.zip   
       asset_content_type application/zip  
