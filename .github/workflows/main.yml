name: "publish"
on:
  push:
    branches:
      - release

jobs:
  build:
    strategy:
      fail-fast: false
    matrix:
      settings:
        - host: macos-latest
          target: x86_64-apple-darwin
        - host: macos-latest
          target: aarch64-apple-darwin
        - host: windows-latest
          target: x86_64-pc-windows-msvc
          ext: .exe
        - host: ubuntu-latest
          target: aarch64-unknown-linux-gnu
          setup: |
            sudo apt-get update
            sudo apt-get install gcc-aarch64-linux-gnu -y
        - host: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          setup: |
            sudo apt-get update
            sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: true
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: "macos-latest-universal"
            args: "--target universal-apple-darwin"
          - platform: "macos-latest-x86_64"
            args: "--target x86_64-apple-darwin"
          - platform: "macos-latest-aarch64"
            args: "--target aarch64-apple-darwin"
          - platform: "ubuntu-20.04"
            args: ""
          - platform: "windows-latest"
            args: "--target x86_64-pc-windows-msvc"
    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
